<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rendering on Luxaviar&#39;s Blog</title>
    <link>https://luxaviar.github.io/tags/Rendering/</link>
    <description>Recent content in Rendering on Luxaviar&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 05 Jun 2022 22:32:55 +0800</lastBuildDate><atom:link href="https://luxaviar.github.io/tags/Rendering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>实时渲染中的反走样：空域滤波抗锯齿</title>
      <link>https://luxaviar.github.io/post/20220605-%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93%E4%B8%AD%E7%9A%84%E5%8F%8D%E8%B5%B0%E6%A0%B7%E7%A9%BA%E5%9F%9F%E6%BB%A4%E6%B3%A2%E6%8A%97%E9%94%AF%E9%BD%BF/</link>
      <pubDate>Sun, 05 Jun 2022 22:32:55 +0800</pubDate>
      
      <guid>https://luxaviar.github.io/post/20220605-%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93%E4%B8%AD%E7%9A%84%E5%8F%8D%E8%B5%B0%E6%A0%B7%E7%A9%BA%E5%9F%9F%E6%BB%A4%E6%B3%A2%E6%8A%97%E9%94%AF%E9%BD%BF/</guid>
      <description>MSAA对几何走样有很好的表现，并且避免了SSAA成倍的着色开销，但缺点也很明显： 深度和颜色缓冲的显存和带宽开销并没有减少 不适用于延迟渲染（</description>
    </item>
    
    <item>
      <title>实时渲染中的反走样：MSAA</title>
      <link>https://luxaviar.github.io/post/20220529-%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93%E4%B8%AD%E7%9A%84%E5%8F%8D%E8%B5%B0%E6%A0%B7MSAA/</link>
      <pubDate>Sun, 29 May 2022 18:50:19 +0800</pubDate>
      
      <guid>https://luxaviar.github.io/post/20220529-%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93%E4%B8%AD%E7%9A%84%E5%8F%8D%E8%B5%B0%E6%A0%B7MSAA/</guid>
      <description>原理 如上一篇文章 所述，在实时渲染中走样不可避免，虽然SSAA能同时解决着色和几何走样，但由于高昂的性能开销注定无法成为主流，于是各种Anti</description>
    </item>
    
    <item>
      <title>渲染中的采样理论</title>
      <link>https://luxaviar.github.io/post/20220528-%E6%B8%B2%E6%9F%93%E4%B8%AD%E7%9A%84%E9%87%87%E6%A0%B7%E7%90%86%E8%AE%BA/</link>
      <pubDate>Sat, 28 May 2022 17:03:42 +0800</pubDate>
      
      <guid>https://luxaviar.github.io/post/20220528-%E6%B8%B2%E6%9F%93%E4%B8%AD%E7%9A%84%E9%87%87%E6%A0%B7%E7%90%86%E8%AE%BA/</guid>
      <description>采样定理 采样是将一个信号（例如时间或空间上连续的函数）转换为离散序列（时间或空间上离散的函数）的过程。信号可以是任何维度的连续函数，最常见的</description>
    </item>
    
  </channel>
</rss>
